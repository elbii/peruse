#!/usr/bin/env ruby
$LOAD_PATH << './lib'
require 'peruse'
require 'optparse'

options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: peruse [options]"
  opts.separator ""
  opts.separator "Options"

  opts.on(
    "-h",
    "--host HOST",
    "comma-separated list of Elasticsearch hosts to use"
  ) do |option|
    options[:host] = option
  end

  opts.on(
    "-p",
    "--parse-only",
    "parse but don't execute query, returning ES-compatible JSON"
  ) do |option|
    options[:parse_only] = option
  end

  opts.on(
    "-s",
    "--size SIZE",
    "max number of hits to return"
  ) do |option|
    options[:size] = option
  end
  
  opts.on(
    "-r",
    "--randomize-hosts",
    "randomize hosts used for each search"
  ) do |option|
    options[:randomize_hosts] = option
  end

  opts.on(
    "-t",
    "--timestamp-field FIELD",
    "timestamp field to use for timerange searches"
  ) do |option|
    options[:timestamp_field] = option
  end

  opts.on(
    "-d",
    "--debug",
    "turn on debugging output"
  ) do |option|
    options[:debug] = option
  end

end.parse!

Peruse.configure do |c|
  c.parse_only = options[:parse_only]
  c.max_number_of_hits = options[:size].to_i if options[:size]
  c.timestamp_field =
    options[:timestamp_field].strip if options[:timstamp_field]
  c.logger = Logger.new(STDOUT) if options[:debug]

  c.elasticsearch_client = Elasticsearch::Client.new(
    host: options[:host].split(',').collect! { |h| h.strip },
    randomize_hosts: options[:randomize_hosts]
  ) unless c.parse_only
end

puts Peruse.search($stdin.read).to_json
